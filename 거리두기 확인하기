import Foundation
var board: [[Character]] = []
        
func solution(_ places:[[String]]) -> [Int] {
    var ans = [Int]()
    for place in places {
        board = []
        for p in place {
            board.append(Array(p))
        }
        var isValid = 1
        // 보드 마다
        var visited = Array(repeating: Array(repeating: false, count: 5), count: 5)
        for i in 0..<5 {
            for j in 0..<5 {
                if isValid == 0 {
                    continue
                }
                if board[i][j] == "P" {
                    var q: [[Int]] = [[i,j,0]]
                    while !q.isEmpty {
                        let top = q.removeFirst()
                        visited[top[0]][top[1]] = true
                        let mdist = abs(top[0] - i) + abs(top[1] - j)
                        if mdist > 0 && mdist <= 2 { 
                            if board[top[0]][top[1]] == "P" {
                                isValid = 0
                                break
                            } else if board[top[0]][top[1]] == "X" {
                                continue
                            }
                        }
                        if mdist == 2 { continue }
                        // 상
                        if top[0] > 0 && !visited[top[0] - 1][top[1]] {
                            q.append([top[0] - 1, top[1]])
                        }
                        // 하
                        if top[0] < 4 && !visited[top[0] + 1][top[1]] {
                            q.append([top[0] + 1, top[1]])
                        }
                        // 좌
                        if top[1] > 0 && !visited[top[0]][top[1] - 1] {
                            q.append([top[0], top[1] - 1])
                        }
                        // 우
                        if top[1] < 4 && !visited[top[0]][top[1] + 1] {
                            q.append([top[0], top[1] + 1])
                        }
                    }
                }
            }
        }
        ans.append(isValid)
    }
    return ans
}
